package com.kh.chap04.field.model.vo;

// 변수 선언 위치에 따른 구분 (전역변수, 지역변수, 매개변수)
public class FieldTest1 {
	
	/*
	 * *변수 구분
	 * - 전역변수(== 필드): 클래스 영역에 바로 선언하는 변수 => 클래스 내에서면 어디서든 사용 가능
	 * - 지역변수: 클래스 영역 내의 어떤 특정한 구역 ({})에 선언한 변수 => 메소드 역역 안, if문 블럭 안, for문 블럭 안, for문 초기식, 매개변수, ...
	 * 
	 * 1. 전역변수
	 * - 멤버변수(== 필드 == 인스턴스변수): 일반 필드의 개념
	 *   생성 시점: new 연산자를 통해 해당 객체를 생성하는 순간 메모리의 heap 영역에 할당됨
	 *   소멸 시점: 연결이 끊긴 후 가비지 컬렉션이 일어나는 순간 소멸(객체가 소멸되는 순간)
	 * 
	 * - 클래스변수(== static변수): static이라는 예약어가 붙은 변수
	 * 	  생성 시점: 프로그램 시작과 동시에 메모리의 static 영역에 생성됨 (해당 객체가 생성이 되지 않더라도 바로 가져다 쓸 수 있는 개념)
	 * 	  소멸 시점: 프로그램 종료 시 소멸
	 * 
	 * 2. 지역변수
	 * 	   생성 시점: 특정한 구역 ({}) 실행 중 메모리 stack 영역에 할당
	 * 	   소멸 시점: 특정한 구역({}) 종료 시 값이 소멸
	 * 
	 */
	
	// 멤버변수( == 필드 == 인스턴스 변수)
	public int global;
	
					// 매개변수: 일종의 지역변수 개념
	public void test(int num) {
		
		// 지역변수: 반드시 초기화
		int local = 0; // local이 생성 및 초기화
		
		// 멤버변수 출력
		System.out.println(global); // public int global; 시점에 JVM에서 알아서 초기화시킴
		
		// 지역변수 출력
		System.out.println(local); // 지역변수는 int local = 0;과 같이 항상 생성 및 초기화 해 주어야 함
		
		// 매개변수 출력
		System.out.println(num); // Run 클래스에서 f1.test(10);을 실행할 때 알아서 그 시점에서 대입된 후 실행됨
		
	}

}
