// 주석: 소스코드 내에 해당 소스코드에 대한 설명을 기술하고 싶을 때 사용
//      소스코드와 무관(즉, 소스코드로 인식되지 않음)

// 한줄짜리 주석

/* 여러 줄
 * 짜리
 * 주석
 */

/*
 * 자바 프로그래밍 순서
 * 1. Project 생성: 내가 만들 프로그램에서 필요로 하는 모든 소스코드와 환경설정 파일 등을 다 포함하는 최상위 폴더
 * 2. Package 생성: 소스코드를 보관하는 폴더(찾아가기 쉽게 구분하기 위해서, 역할별로 분류를 하기 위해서) => src 폴더 내에 만듦!
 * 3. Class 생성: 소스코드의 최소 단위(곧, .java 파일이 됨)
 * 
 * *패키지 생성 시 주의사항
 * 1. 한 패키지 내에 동일한 이름의 패키지 중복 불가
 * 2. 패키지명은 항상 소문자로 적어야 함
 * 3. 기본 패키지(즉 src 폴더에) 클래스를 만드는 게 가능은 하지만 권장되지는 않음 => 위치 찾기 힘들어져서
 * 4. 한 패키지 내에 동일한 이름의 클래스 중복 불가
 * 5. 서로 다른 패키지 내에 동일한 이름의 클래스는 존재 가능
 * 
 * *패키지 생성 시 권장사항
 * 1. 패키지는 적어도 세 단계 이상으로 만들어 줄 것
 * 2. 두 번째 레벨까지는 회사 도메인 (손쉽게 웹사이트에 접속할 수 있는 고유한 주소) 의 역순으로 쓸 것
 * ex) www.google.com => com.google
 * 	   www.naver.com => com.naver
 * 	   www.kh.com => com.kh
 * 	       왜? 도메인은 고유한 주소값이기 때문에 중복을 방지할 수 있고, 패키지만 봐도 어디서 제작한 프로젝트인지 파악 가능
 * 1,2의 이유 => Spring Framework에서 지어낸 규칙이기 때문
 */

package com.kh.first;

public class HelloWorld {

}

